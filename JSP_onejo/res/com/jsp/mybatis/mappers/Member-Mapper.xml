<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Member-Mapper">
	<sql id="search">
		<if test="searchType == 'i'.toString() ">
			and id like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'n'.toString() ">
			and name like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'p'.toString() ">
			and phone like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'e'.toString() ">
			and email like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'k'.toString()">
			and nickName like '%'||#{keyword}||'%'
		</if>
	</sql>

	<select id="selectSearchMemberList" resultType="member">
		select
		*
		from member
		where id is not null
		<include refid="search" />
		order by regDate desc
	</select>

	<select id="selectSearchMemberListCount" resultType="int">
		select count(*)
		from member
		where id is not null
		<include refid="search" />
	</select>

	<select id="selectMemberById" parameterType="str"
		resultType="member">
		select
		*
		from member
		where id=#{id}
	</select>

	<select id="selectMemberByNickName" parameterType="str"
		resultType="member">
		select
		*
		from member
		where nickName=#{nickName}
	</select>

	<update id="insertMember" parameterType="member">
		insert into
		member(id, pwd, name, phone, email, address, department)
		
		values(#{id}, #{pwd}, #{name}, #{phone}, #{email}, #{address}, #{department})
	</update>

	<update id="updateMember" parameterType="member">
		update member
		set
		pwd=#{pwd}, name=#{name}, phone=#{phone},
		email=#{email}, address=#{address}, department=#{department}
		 
		where id = #{id}
	</update>

	<update id="deleteMember" parameterType="str">
		delete
		from member
		where
		id = #{id}
	</update>




</mapper>